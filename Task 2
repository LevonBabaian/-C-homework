using System;
class Program
{
    static void Main()
    {
        int rows = 8;
        int cols = 8;

        int[,] chessboard = new int[rows, cols];
        int queenRow = 3; // Row index of the queen
        int queenCol = 4; // Column index of the queen
        chessboard[queenRow, queenCol] = 1;
        MarkQueenMoves(chessboard, queenRow, queenCol);
        ShowChessboard(chessboard);
        Console.ReadLine();
    }

    static void MarkQueenMoves(int[,] chessboard, int row, int col)
    {
        for (int i = 0; i < chessboard.GetLength(0); i++)
        {
            chessboard[i, col] = 1; // Vertical moves
            chessboard[row, i] = 1; // Horizontal moves
        }
        for (int i = 1; i < chessboard.GetLength(0); i++)
        {
            // Top-left to bottom-right diagonal
            if (row + i < chessboard.GetLength(0) && col + i < chessboard.GetLength(1))
                chessboard[row + i, col + i] = 1;

            // Top-right to bottom-left diagonal
            if (row - i >= 0 && col + i < chessboard.GetLength(1))
                chessboard[row - i, col + i] = 1;

            // Bottom-left to top-right diagonal
            if (row + i < chessboard.GetLength(0) && col - i >= 0)
                chessboard[row + i, col - i] = 1;

            // Bottom-right to top-left diagonal
            if (row - i >= 0 && col - i >= 0)
                chessboard[row - i, col - i] = 1;
        }
    }

    static void ShowChessboard(int[,] chessboard)
    {
        for (int i = 0; i < chessboard.GetLength(0); i++)
        {
            for (int j = 0; j < chessboard.GetLength(1); j++)
            {
                Console.Write(chessboard[i, j] + " ");
            }
            Console.WriteLine();
        }
    }
}
